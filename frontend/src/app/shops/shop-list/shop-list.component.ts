import { Component, Input, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { ShopService, Shop } from '../../services/shop.service';

@Component({
  selector: 'app-shop-list',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './shop-list.component.html',
  styleUrls: ['./shop-list.component.css']
})
export class ShopListComponent implements OnInit {
   loading = false;        // tr·∫°ng th√°i loading
  errorMessage = '';      // hi·ªÉn th·ªã l·ªói n·∫øu c√≥
  @Input() shops: Shop[] = [];   // üëà nh·∫≠n data t·ª´ AppComponent

  constructor(private shopService: ShopService) {}

  ngOnInit() {
    this.loadShops();
  }

  // L·∫•y danh s√°ch shops
  loadShops() {
    this.loading = true;
    this.shopService.getShops().subscribe({
      next: (data: Shop[]) => {
        this.shops = data;
        this.loading = false;
      },
      error: (err) => {
        console.error('L·ªói khi load shops:', err);
        this.errorMessage = 'Kh√¥ng th·ªÉ t·∫£i danh s√°ch shop';
        this.loading = false;
      }
    });
  }

  // C·∫≠p nh·∫≠t shop
  updateShop(shop: Shop) {
    this.shopService.updateShop(shop.id, shop).subscribe({
      next: () => this.loadShops(),
      error: (err) => {
        console.error('L·ªói khi update shop:', err);
        this.errorMessage = 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t shop';
      }
    });
  }

  // X√≥a shop
  deleteShop(id: number) {
    if (!confirm('B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a shop n√†y?')) return;

    this.shopService.deleteShop(id).subscribe({
      next: () => this.loadShops(),
      error: (err) => {
        console.error('L·ªói khi x√≥a shop:', err);
        this.errorMessage = 'Kh√¥ng th·ªÉ x√≥a shop';
      }
    });
  }
}
